<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!--  <configSections>-->
  <!--    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />-->
  <!--  </configSections>-->
  
  <connectionStrings>
    <add name="Connection" connectionString="Server=kraka.ucn.dk;Initial Catalog=UCN_dmaa0216_2Sem_2; User ID=UCN_dmaa0216_2Sem_2; Password=Password1!; MultipleActiveResultSets=True;App=EntityFramework;" providerName="System.Data.SqlClient" />
    <!--<add name="Connection" connectionString="Server=(localdb);Integrated Security=true;Initial Catalog=Bikenbike;" providerName="System.Data.SqlClient" />-->
    <!--<add name="Connection" connectionString="Data Source=localhost\MSSQLEXPRESS2014;Initial Catalog=Bikenbike;Integrated Security=True" providerName="System.Data.SqlClient" />-->
      <!--<add name="Connection" connectionString="Data Source=localhost;Initial Catalog=Bikenbike;Integrated Security=True" providerName="System.Data.SqlClient" />-->
  
  </connectionStrings>
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <system.web>
    <compilation debug="true" />
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <!-- When deploying the service library project, the content of the config file must be added to the host's 
  app.config file. System.Configuration does not support config files for libraries. -->
  <system.serviceModel>
    <bindings>
      <wsHttpBinding>
        <binding name="ServiceLayer.BikeService" maxBufferPoolSize="2147483647" maxReceivedMessageSize="2147483647" receiveTimeout="01:00:00" sendTimeout="01:00:00">
        </binding>
      </wsHttpBinding>
    </bindings>
    <client />
    <services>
      
      <service name="ServiceLayer.BikeService">
        
        <endpoint address="" binding="wsHttpBinding" contract="ServiceLayer.IBikeService">
          <identity>
            <dns value="localhost" />
          </identity>
        </endpoint>
        
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
        <host>
          
          <baseAddresses>
            <add baseAddress="http://localhost:8733/Design_Time_Addresses/ServiceLayer/BikeService/" />
          </baseAddresses>
          
        </host>
      </service>
    </services>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, 
          set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="True" httpsGetEnabled="True" />
          <!-- To receive exception details in faults for debugging purposes, 
          set the value below to true.  Set to false before deployment 
          to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true" />
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
  <!--gg-->
  <!--  <entityFramework>-->
  <!--    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.LocalDbConnectionFactory, EntityFramework">-->
  <!--      <parameters>-->
  <!--        <parameter value="mssqllocaldb" />-->
  <!--      </parameters>-->
  <!--    </defaultConnectionFactory>-->
  <!--    <providers>-->
  <!--      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />-->
  <!--    </providers>-->
  <!--  </entityFramework>-->
  <!--  <system.diagnostics>-->
  <!--    <sources>-->
  <!--      <source name="System.ServiceModel.MessageLogging">-->
  <!--        <listeners>-->
  <!--          <add name="messages"-->
  <!--          type="System.Diagnostics.XmlWriterTraceListener"-->
  <!--          initializeData="c:\logs\messages.svclog" />-->
  <!--        </listeners>-->
  <!--      </source>-->
  <!--    </sources>-->
  <!--  </system.diagnostics>-->
  <!---->
  <!--  <system.serviceModel>-->
  <!--    <diagnostics>-->
  <!--      <messageLogging-->
  <!--           logEntireMessage="true"-->
  <!--           logMalformedMessages="false"-->
  <!--           logMessagesAtServiceLevel="true"-->
  <!--           logMessagesAtTransportLevel="false"-->
  <!--           maxMessagesToLog="3000"-->
  <!--           maxSizeOfMessageToLog="2000"/>-->
  <!--    </diagnostics>-->
  <!--  </system.serviceModel>-->
  <system.diagnostics>
    <sources>
      <source name="System.ServiceModel" switchValue="Information, ActivityTracing" propagateActivity="true">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
      <source name="myUserTraceSource" switchValue="Information, ActivityTracing">
        <listeners>
          <add name="xml" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="xml" type="System.Diagnostics.XmlWriterTraceListener" initializeData="C:\logs\Traces.svclog" />
    </sharedListeners>
  </system.diagnostics>
  <system.serviceModel>
    <diagnostics wmiProviderEnabled="true">
      <messageLogging logEntireMessage="true" logMalformedMessages="true" logMessagesAtServiceLevel="true" logMessagesAtTransportLevel="true" maxMessagesToLog="3000" />
    </diagnostics>
  </system.serviceModel>
</configuration>