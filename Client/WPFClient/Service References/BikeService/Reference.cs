//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.BikeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bicycle", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Bicycle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WPFClient.BikeService.Advertisement> AdsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.Brand BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrandIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.Frame FrameSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> FrameSizeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.BicycleType TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.Wheel WheelSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> WheelSizeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string YearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WPFClient.BikeService.Advertisement> AdsList {
            get {
                return this.AdsListField;
            }
            set {
                if ((object.ReferenceEquals(this.AdsListField, value) != true)) {
                    this.AdsListField = value;
                    this.RaisePropertyChanged("AdsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.Brand Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrandId {
            get {
                return this.BrandIdField;
            }
            set {
                if ((this.BrandIdField.Equals(value) != true)) {
                    this.BrandIdField = value;
                    this.RaisePropertyChanged("BrandId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.Frame FrameSize {
            get {
                return this.FrameSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.FrameSizeField, value) != true)) {
                    this.FrameSizeField = value;
                    this.RaisePropertyChanged("FrameSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> FrameSizeId {
            get {
                return this.FrameSizeIdField;
            }
            set {
                if ((this.FrameSizeIdField.Equals(value) != true)) {
                    this.FrameSizeIdField = value;
                    this.RaisePropertyChanged("FrameSizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.BicycleType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TypeId {
            get {
                return this.TypeIdField;
            }
            set {
                if ((this.TypeIdField.Equals(value) != true)) {
                    this.TypeIdField = value;
                    this.RaisePropertyChanged("TypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.Wheel WheelSize {
            get {
                return this.WheelSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.WheelSizeField, value) != true)) {
                    this.WheelSizeField = value;
                    this.RaisePropertyChanged("WheelSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> WheelSizeId {
            get {
                return this.WheelSizeIdField;
            }
            set {
                if ((this.WheelSizeIdField.Equals(value) != true)) {
                    this.WheelSizeIdField = value;
                    this.RaisePropertyChanged("WheelSizeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Year {
            get {
                return this.YearField;
            }
            set {
                if ((object.ReferenceEquals(this.YearField, value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Brand", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Brand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Frame", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Frame : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BicycleType", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class BicycleType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WPFClient.BikeService.Advertisement> AdvertisementsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WPFClient.BikeService.Bicycle> BicyclesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PWordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SaltField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipcodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WPFClient.BikeService.Advertisement> Advertisements {
            get {
                return this.AdvertisementsField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvertisementsField, value) != true)) {
                    this.AdvertisementsField = value;
                    this.RaisePropertyChanged("Advertisements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WPFClient.BikeService.Bicycle> Bicycles {
            get {
                return this.BicyclesField;
            }
            set {
                if ((object.ReferenceEquals(this.BicyclesField, value) != true)) {
                    this.BicyclesField = value;
                    this.RaisePropertyChanged("Bicycles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PWord {
            get {
                return this.PWordField;
            }
            set {
                if ((object.ReferenceEquals(this.PWordField, value) != true)) {
                    this.PWordField = value;
                    this.RaisePropertyChanged("PWord");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Salt {
            get {
                return this.SaltField;
            }
            set {
                if ((object.ReferenceEquals(this.SaltField, value) != true)) {
                    this.SaltField = value;
                    this.RaisePropertyChanged("Salt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zipcode {
            get {
                return this.ZipcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipcodeField, value) != true)) {
                    this.ZipcodeField = value;
                    this.RaisePropertyChanged("Zipcode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Wheel", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Wheel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SizeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Size {
            get {
                return this.SizeField;
            }
            set {
                if ((this.SizeField.Equals(value) != true)) {
                    this.SizeField = value;
                    this.RaisePropertyChanged("Size");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Advertisement", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Advertisement : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.Bicycle BikeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BikeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<WPFClient.BikeService.Booking> BookingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.Bicycle Bike {
            get {
                return this.BikeField;
            }
            set {
                if ((object.ReferenceEquals(this.BikeField, value) != true)) {
                    this.BikeField = value;
                    this.RaisePropertyChanged("Bike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BikeId {
            get {
                return this.BikeIdField;
            }
            set {
                if ((this.BikeIdField.Equals(value) != true)) {
                    this.BikeIdField = value;
                    this.RaisePropertyChanged("BikeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<WPFClient.BikeService.Booking> Bookings {
            get {
                return this.BookingsField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingsField, value) != true)) {
                    this.BookingsField = value;
                    this.RaisePropertyChanged("Bookings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/ModelLayer")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.Advertisement AdvertisementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AdvertismentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WPFClient.BikeService.User RentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentUserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TotalPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.Advertisement Advertisement {
            get {
                return this.AdvertisementField;
            }
            set {
                if ((object.ReferenceEquals(this.AdvertisementField, value) != true)) {
                    this.AdvertisementField = value;
                    this.RaisePropertyChanged("Advertisement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AdvertismentId {
            get {
                return this.AdvertismentIdField;
            }
            set {
                if ((this.AdvertismentIdField.Equals(value) != true)) {
                    this.AdvertismentIdField = value;
                    this.RaisePropertyChanged("AdvertismentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WPFClient.BikeService.User RentUser {
            get {
                return this.RentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.RentUserField, value) != true)) {
                    this.RentUserField = value;
                    this.RaisePropertyChanged("RentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentUserId {
            get {
                return this.RentUserIdField;
            }
            set {
                if ((this.RentUserIdField.Equals(value) != true)) {
                    this.RentUserIdField = value;
                    this.RaisePropertyChanged("RentUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BikeService.IBikeService")]
    public interface IBikeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateBicycle", ReplyAction="http://tempuri.org/IBikeService/CreateBicycleResponse")]
        void CreateBicycle(WPFClient.BikeService.Bicycle b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateBicycle", ReplyAction="http://tempuri.org/IBikeService/CreateBicycleResponse")]
        System.Threading.Tasks.Task CreateBicycleAsync(WPFClient.BikeService.Bicycle b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikesByUser", ReplyAction="http://tempuri.org/IBikeService/GetBikesByUserResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Bicycle> GetBikesByUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikesByUser", ReplyAction="http://tempuri.org/IBikeService/GetBikesByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Bicycle>> GetBikesByUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBrands", ReplyAction="http://tempuri.org/IBikeService/GetBrandsResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Brand> GetBrands();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBrands", ReplyAction="http://tempuri.org/IBikeService/GetBrandsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Brand>> GetBrandsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetWheelSizes", ReplyAction="http://tempuri.org/IBikeService/GetWheelSizesResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Wheel> GetWheelSizes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetWheelSizes", ReplyAction="http://tempuri.org/IBikeService/GetWheelSizesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Wheel>> GetWheelSizesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetFrameSizes", ReplyAction="http://tempuri.org/IBikeService/GetFrameSizesResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Frame> GetFrameSizes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetFrameSizes", ReplyAction="http://tempuri.org/IBikeService/GetFrameSizesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Frame>> GetFrameSizesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetTypes", ReplyAction="http://tempuri.org/IBikeService/GetTypesResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.BicycleType> GetTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetTypes", ReplyAction="http://tempuri.org/IBikeService/GetTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.BicycleType>> GetTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikeByYear", ReplyAction="http://tempuri.org/IBikeService/GetBikeByYearResponse")]
        WPFClient.BikeService.Bicycle GetBikeByYear(string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBikeByYear", ReplyAction="http://tempuri.org/IBikeService/GetBikeByYearResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.Bicycle> GetBikeByYearAsync(string year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveBicycle", ReplyAction="http://tempuri.org/IBikeService/RemoveBicycleResponse")]
        void RemoveBicycle(int bicycleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveBicycle", ReplyAction="http://tempuri.org/IBikeService/RemoveBicycleResponse")]
        System.Threading.Tasks.Task RemoveBicycleAsync(int bicycleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateAd", ReplyAction="http://tempuri.org/IBikeService/CreateAdResponse")]
        void CreateAd(string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateAd", ReplyAction="http://tempuri.org/IBikeService/CreateAdResponse")]
        System.Threading.Tasks.Task CreateAdAsync(string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/ModifyAd", ReplyAction="http://tempuri.org/IBikeService/ModifyAdResponse")]
        void ModifyAd(int id, string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/ModifyAd", ReplyAction="http://tempuri.org/IBikeService/ModifyAdResponse")]
        System.Threading.Tasks.Task ModifyAdAsync(int id, string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveAd", ReplyAction="http://tempuri.org/IBikeService/RemoveAdResponse")]
        void RemoveAd(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveAd", ReplyAction="http://tempuri.org/IBikeService/RemoveAdResponse")]
        System.Threading.Tasks.Task RemoveAdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAdByTitle", ReplyAction="http://tempuri.org/IBikeService/GetAdByTitleResponse")]
        WPFClient.BikeService.Advertisement GetAdByTitle(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAdByTitle", ReplyAction="http://tempuri.org/IBikeService/GetAdByTitleResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.Advertisement> GetAdByTitleAsync(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAdvertisementsByUser", ReplyAction="http://tempuri.org/IBikeService/GetAdvertisementsByUserResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAdvertisementsByUser(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAdvertisementsByUser", ReplyAction="http://tempuri.org/IBikeService/GetAdvertisementsByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAdvertisementsByUserAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/FindAdById", ReplyAction="http://tempuri.org/IBikeService/FindAdByIdResponse")]
        WPFClient.BikeService.Advertisement FindAdById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/FindAdById", ReplyAction="http://tempuri.org/IBikeService/FindAdByIdResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.Advertisement> FindAdByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAllAds", ReplyAction="http://tempuri.org/IBikeService/GetAllAdsResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAllAds();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAllAds", ReplyAction="http://tempuri.org/IBikeService/GetAllAdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAllAdsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAvailableAds", ReplyAction="http://tempuri.org/IBikeService/GetAvailableAdsResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAvailableAds(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAvailableAds", ReplyAction="http://tempuri.org/IBikeService/GetAvailableAdsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAvailableAdsAsync(System.DateTime start, System.DateTime end);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateUser", ReplyAction="http://tempuri.org/IBikeService/CreateUserResponse")]
        void CreateUser(string email, string pword, string name, string phone, string address, string zipcode, string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateUser", ReplyAction="http://tempuri.org/IBikeService/CreateUserResponse")]
        System.Threading.Tasks.Task CreateUserAsync(string email, string pword, string name, string phone, string address, string zipcode, string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/ModifyUser", ReplyAction="http://tempuri.org/IBikeService/ModifyUserResponse")]
        void ModifyUser(int id, string email, string name, string phone, string address, string zipcode, string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/ModifyUser", ReplyAction="http://tempuri.org/IBikeService/ModifyUserResponse")]
        System.Threading.Tasks.Task ModifyUserAsync(int id, string email, string name, string phone, string address, string zipcode, string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveUser", ReplyAction="http://tempuri.org/IBikeService/RemoveUserResponse")]
        void RemoveUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveUser", ReplyAction="http://tempuri.org/IBikeService/RemoveUserResponse")]
        System.Threading.Tasks.Task RemoveUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAllUsers", ReplyAction="http://tempuri.org/IBikeService/GetAllUsersResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.User> GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetAllUsers", ReplyAction="http://tempuri.org/IBikeService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.User>> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetUser", ReplyAction="http://tempuri.org/IBikeService/GetUserResponse")]
        WPFClient.BikeService.User GetUser(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetUser", ReplyAction="http://tempuri.org/IBikeService/GetUserResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.User> GetUserAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetUserByEmail", ReplyAction="http://tempuri.org/IBikeService/GetUserByEmailResponse")]
        WPFClient.BikeService.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetUserByEmail", ReplyAction="http://tempuri.org/IBikeService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/LoginUser", ReplyAction="http://tempuri.org/IBikeService/LoginUserResponse")]
        WPFClient.BikeService.User LoginUser(string email, string pword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/LoginUser", ReplyAction="http://tempuri.org/IBikeService/LoginUserResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.User> LoginUserAsync(string email, string pword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateBooking", ReplyAction="http://tempuri.org/IBikeService/CreateBookingResponse")]
        void CreateBooking(WPFClient.BikeService.Booking b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CreateBooking", ReplyAction="http://tempuri.org/IBikeService/CreateBookingResponse")]
        System.Threading.Tasks.Task CreateBookingAsync(WPFClient.BikeService.Booking b);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveBooking", ReplyAction="http://tempuri.org/IBikeService/RemoveBookingResponse")]
        void RemoveBooking(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/RemoveBooking", ReplyAction="http://tempuri.org/IBikeService/RemoveBookingResponse")]
        System.Threading.Tasks.Task RemoveBookingAsync(int bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBookingsByUser", ReplyAction="http://tempuri.org/IBikeService/GetBookingsByUserResponse")]
        System.Collections.Generic.List<WPFClient.BikeService.Booking> GetBookingsByUser(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBookingsByUser", ReplyAction="http://tempuri.org/IBikeService/GetBookingsByUserResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Booking>> GetBookingsByUserAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBookingByPrice", ReplyAction="http://tempuri.org/IBikeService/GetBookingByPriceResponse")]
        WPFClient.BikeService.Booking GetBookingByPrice(double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/GetBookingByPrice", ReplyAction="http://tempuri.org/IBikeService/GetBookingByPriceResponse")]
        System.Threading.Tasks.Task<WPFClient.BikeService.Booking> GetBookingByPriceAsync(double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CalcPrice", ReplyAction="http://tempuri.org/IBikeService/CalcPriceResponse")]
        double CalcPrice(System.DateTime startDate, System.DateTime endDate, double price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBikeService/CalcPrice", ReplyAction="http://tempuri.org/IBikeService/CalcPriceResponse")]
        System.Threading.Tasks.Task<double> CalcPriceAsync(System.DateTime startDate, System.DateTime endDate, double price);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBikeServiceChannel : WPFClient.BikeService.IBikeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BikeServiceClient : System.ServiceModel.ClientBase<WPFClient.BikeService.IBikeService>, WPFClient.BikeService.IBikeService {
        
        public BikeServiceClient() {
        }
        
        public BikeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BikeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BikeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BikeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateBicycle(WPFClient.BikeService.Bicycle b) {
            base.Channel.CreateBicycle(b);
        }
        
        public System.Threading.Tasks.Task CreateBicycleAsync(WPFClient.BikeService.Bicycle b) {
            return base.Channel.CreateBicycleAsync(b);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Bicycle> GetBikesByUser(int Id) {
            return base.Channel.GetBikesByUser(Id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Bicycle>> GetBikesByUserAsync(int Id) {
            return base.Channel.GetBikesByUserAsync(Id);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Brand> GetBrands() {
            return base.Channel.GetBrands();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Brand>> GetBrandsAsync() {
            return base.Channel.GetBrandsAsync();
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Wheel> GetWheelSizes() {
            return base.Channel.GetWheelSizes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Wheel>> GetWheelSizesAsync() {
            return base.Channel.GetWheelSizesAsync();
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Frame> GetFrameSizes() {
            return base.Channel.GetFrameSizes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Frame>> GetFrameSizesAsync() {
            return base.Channel.GetFrameSizesAsync();
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.BicycleType> GetTypes() {
            return base.Channel.GetTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.BicycleType>> GetTypesAsync() {
            return base.Channel.GetTypesAsync();
        }
        
        public WPFClient.BikeService.Bicycle GetBikeByYear(string year) {
            return base.Channel.GetBikeByYear(year);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.Bicycle> GetBikeByYearAsync(string year) {
            return base.Channel.GetBikeByYearAsync(year);
        }
        
        public void RemoveBicycle(int bicycleId) {
            base.Channel.RemoveBicycle(bicycleId);
        }
        
        public System.Threading.Tasks.Task RemoveBicycleAsync(int bicycleId) {
            return base.Channel.RemoveBicycleAsync(bicycleId);
        }
        
        public void CreateAd(string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId) {
            base.Channel.CreateAd(title, description, price, startDate, endDate, bikeId, userId);
        }
        
        public System.Threading.Tasks.Task CreateAdAsync(string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId) {
            return base.Channel.CreateAdAsync(title, description, price, startDate, endDate, bikeId, userId);
        }
        
        public void ModifyAd(int id, string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId) {
            base.Channel.ModifyAd(id, title, description, price, startDate, endDate, bikeId, userId);
        }
        
        public System.Threading.Tasks.Task ModifyAdAsync(int id, string title, string description, double price, System.DateTime startDate, System.DateTime endDate, System.Nullable<int> bikeId, System.Nullable<int> userId) {
            return base.Channel.ModifyAdAsync(id, title, description, price, startDate, endDate, bikeId, userId);
        }
        
        public void RemoveAd(int id) {
            base.Channel.RemoveAd(id);
        }
        
        public System.Threading.Tasks.Task RemoveAdAsync(int id) {
            return base.Channel.RemoveAdAsync(id);
        }
        
        public WPFClient.BikeService.Advertisement GetAdByTitle(string title) {
            return base.Channel.GetAdByTitle(title);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.Advertisement> GetAdByTitleAsync(string title) {
            return base.Channel.GetAdByTitleAsync(title);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAdvertisementsByUser(int Id) {
            return base.Channel.GetAdvertisementsByUser(Id);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAdvertisementsByUserAsync(int Id) {
            return base.Channel.GetAdvertisementsByUserAsync(Id);
        }
        
        public WPFClient.BikeService.Advertisement FindAdById(int id) {
            return base.Channel.FindAdById(id);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.Advertisement> FindAdByIdAsync(int id) {
            return base.Channel.FindAdByIdAsync(id);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAllAds() {
            return base.Channel.GetAllAds();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAllAdsAsync() {
            return base.Channel.GetAllAdsAsync();
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Advertisement> GetAvailableAds(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAvailableAds(start, end);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Advertisement>> GetAvailableAdsAsync(System.DateTime start, System.DateTime end) {
            return base.Channel.GetAvailableAdsAsync(start, end);
        }
        
        public void CreateUser(string email, string pword, string name, string phone, string address, string zipcode, string age) {
            base.Channel.CreateUser(email, pword, name, phone, address, zipcode, age);
        }
        
        public System.Threading.Tasks.Task CreateUserAsync(string email, string pword, string name, string phone, string address, string zipcode, string age) {
            return base.Channel.CreateUserAsync(email, pword, name, phone, address, zipcode, age);
        }
        
        public void ModifyUser(int id, string email, string name, string phone, string address, string zipcode, string age) {
            base.Channel.ModifyUser(id, email, name, phone, address, zipcode, age);
        }
        
        public System.Threading.Tasks.Task ModifyUserAsync(int id, string email, string name, string phone, string address, string zipcode, string age) {
            return base.Channel.ModifyUserAsync(id, email, name, phone, address, zipcode, age);
        }
        
        public void RemoveUser(int id) {
            base.Channel.RemoveUser(id);
        }
        
        public System.Threading.Tasks.Task RemoveUserAsync(int id) {
            return base.Channel.RemoveUserAsync(id);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.User> GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.User>> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WPFClient.BikeService.User GetUser(int id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.User> GetUserAsync(int id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public WPFClient.BikeService.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public WPFClient.BikeService.User LoginUser(string email, string pword) {
            return base.Channel.LoginUser(email, pword);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.User> LoginUserAsync(string email, string pword) {
            return base.Channel.LoginUserAsync(email, pword);
        }
        
        public void CreateBooking(WPFClient.BikeService.Booking b) {
            base.Channel.CreateBooking(b);
        }
        
        public System.Threading.Tasks.Task CreateBookingAsync(WPFClient.BikeService.Booking b) {
            return base.Channel.CreateBookingAsync(b);
        }
        
        public void RemoveBooking(int bookingId) {
            base.Channel.RemoveBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task RemoveBookingAsync(int bookingId) {
            return base.Channel.RemoveBookingAsync(bookingId);
        }
        
        public System.Collections.Generic.List<WPFClient.BikeService.Booking> GetBookingsByUser(int userId) {
            return base.Channel.GetBookingsByUser(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<WPFClient.BikeService.Booking>> GetBookingsByUserAsync(int userId) {
            return base.Channel.GetBookingsByUserAsync(userId);
        }
        
        public WPFClient.BikeService.Booking GetBookingByPrice(double price) {
            return base.Channel.GetBookingByPrice(price);
        }
        
        public System.Threading.Tasks.Task<WPFClient.BikeService.Booking> GetBookingByPriceAsync(double price) {
            return base.Channel.GetBookingByPriceAsync(price);
        }
        
        public double CalcPrice(System.DateTime startDate, System.DateTime endDate, double price) {
            return base.Channel.CalcPrice(startDate, endDate, price);
        }
        
        public System.Threading.Tasks.Task<double> CalcPriceAsync(System.DateTime startDate, System.DateTime endDate, double price) {
            return base.Channel.CalcPriceAsync(startDate, endDate, price);
        }
    }
}
